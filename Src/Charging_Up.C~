#include "Charging_Up.h"

ClassImp(Charging_Up);

//////////

Charging_Up::Charging_Up(const TString& a_path) : path(a_path)
{
  gStyle->SetOptFit(1111);
}//Charging_Up::Charging_Up()

//////////

Charging_Up::~Charging_Up()
{
}//Charging_Up::~Charging_Up()

//////////

void Charging_Up::Run()
{
  for(Int_t i=1; i<241; i++)
    {
      TString path_data = path;
      path_data += "/Charging_Up_Data_";
      path_data += string(3 - to_string(i).length(), '0') + to_string(i);
      path_data += ".mca";

      Read_MCA_Data read_mca_data(path_data, to_string(i), to_string(i));
      TH1D histo = read_mca_data.Get_Histo();

      histo.GetXaxis()->SetRange(500, 3000);
      Double_t peak = histo.GetMaximum();

      histo.GetXaxis()->SetRange(0, -1);
      histo.GetYaxis()->SetRangeUser(0, 1.1*peak);

      TCanvas canvas_fit("canvas_fit", "canvas_fit", 800, 500);
      canvas_fit.Draw();
      canvas_fit.cd();
      
      histo.Draw();

      Fit(histo);

      TF1* fit_func = (TF1*)(histo.GetListOfFunctions()->FindObject("total"));
      
      Double_t peak_fit = fit_func->GetParameter(1);
      Double_t peak_error_fit = fit_func->GetParError(1);
      
      Int_t n_point = gr_time_peak.GetN();
      gr_time_peak.SetPoint(n_point, n_point, peak_fit);
      gr_time_peak.SetPointError(n_point, 0, peak_error_fit);
      
      TString print_name = string(3 - to_string(i).length(), '0') + to_string(i) + ".png";
      canvas_fit.Print(print_name, "png");
    }

  TCanvas canvas("canvas", "canvas", 800, 500);
  canvas.Draw();

  gr_time_peak.Draw("AP*");

  canvas.Print("test.png", "png");
  
  return;
}//void Charging_Up::Run()

//////////

void Charging_Up::Fit(TH1D& histo)
{
  const Double_t fit_range_lower = 1000;
  const Double_t fit_range_upper = 2600;
    
  TF1 peak("peak", "gaus", fit_range_lower, fit_range_upper);
  TF1 escape_peak("escape_peak", "gaus", fit_range_lower, fit_range_upper);
  TF1 back("back", "pol3", fit_range_lower, fit_range_upper);
  TF1 total("total", "gaus(0)+gaus(3)+pol2(6)", fit_range_lower, fit_range_upper);
  
  histo.Fit(&peak, "Q", "", 1800, 2200);
  histo.Fit(&escape_peak, "Q", "", 1000, 1500);
  
  Double_t par[10] = {1};
  peak.GetParameters(par);
  escape_peak.GetParameters(&par[3]);
  total.SetParameters(par);
  
  histo.Fit(&total, "QR", "");
}//void Charging_Up::Fit(TH1D& histo)

//////////
